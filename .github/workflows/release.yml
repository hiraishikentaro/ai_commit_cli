name: Release

on:
  push:
    tags:
      - "v*"

env:
  PROJECT_NAME: aic

permissions:
  contents: write
  discussions: write
  pull-requests: write

jobs:
  build-release:
    name: Build Release (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: x86_64-unknown-linux-gnu,
              os: ubuntu-latest,
              extension: "",
            }
          - { target: x86_64-apple-darwin, os: macos-latest, extension: "" }
          - { target: aarch64-apple-darwin, os: macos-latest, extension: "" }

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Release Notes
        if: matrix.job.target == 'x86_64-unknown-linux-gnu'
        id: release_notes
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0)

          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)

          # Generate changelog
          echo "CHANGELOG" > RELEASE_NOTES.md
          echo "==========" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md

          if [ "$PREVIOUS_TAG" != "" ]; then
            # If there is a previous tag, list changes since then
            echo "Changes since $PREVIOUS_TAG:" >> RELEASE_NOTES.md
            git log --pretty=format:"* %s" $PREVIOUS_TAG..$LATEST_TAG >> RELEASE_NOTES.md
          else
            # If this is the first tag, list all changes
            echo "Initial release changes:" >> RELEASE_NOTES.md
            git log --pretty=format:"* %s" $LATEST_TAG >> RELEASE_NOTES.md
          fi

          echo "" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## Installation" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "You can install via Homebrew:" >> RELEASE_NOTES.md
          echo '```bash' >> RELEASE_NOTES.md
          echo "brew tap hiraishikentaro/ai_commit_cli" >> RELEASE_NOTES.md
          echo "brew install ai_commit_cli" >> RELEASE_NOTES.md
          echo '```' >> RELEASE_NOTES.md

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.job.target }}

      - name: Install dependencies (Ubuntu)
        if: matrix.job.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev

      - name: Install dependencies (macOS)
        if: matrix.job.os == 'macos-latest'
        run: |
          brew install openssl@3

      - name: Build target
        run: cargo build --release --target ${{ matrix.job.target }}

      - name: Rename artifacts
        shell: bash
        run: |
          SOURCE="target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}"
          DEST="target/${{ matrix.job.target }}/release/ai_commit_cli-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}"
          mv "$SOURCE" "$DEST"

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.job.target }}/release/ai_commit_cli-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}
          body_path: RELEASE_NOTES.md
          generate_release_notes: true
